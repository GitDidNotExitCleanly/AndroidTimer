package com.app.stopwatch;

import android.app.IntentService;
import android.content.Intent;
import android.support.v4.content.LocalBroadcastManager;

public class TimerIntentService extends IntentService {
	// actions IntentService can perform
	public static final String UPDATE_TIME = "com.app.stopwatch.action.UPDATE_TIME";
	public static final String STOP_UPDATE_TIME = "com.app.stopwatch.action.STOP_UPDATE_TIME";
	
	// broadcaster
	private LocalBroadcastManager broadcaster;
	
	// parameter for avoiding multiple requests
	private String lastRequest;
	
	// internal parameters
	private final int started = 0;
	private final int stopped = 1;
	private int currentState;
	
	private long startTime;
	private long timeCount;

	public TimerIntentService() {
		super("TimerIntentService");
		broadcaster = LocalBroadcastManager.getInstance(this);
		lastRequest = "";
		currentState = stopped;
		timeCount = 0;
	}
	
	public void onCreate() {
		super.onCreate();
		while (true) {
			if (currentState == started) {
				// calculate seconds, minutes
				long millis = System.currentTimeMillis() - currentSystemMills;
				int oneTenthSeconds = (int)(millis / 10);
	            int seconds = oneTenthSeconds / 100;
	            int minutes = seconds / 60;
	            int hours = minutes / 60;
	            oneTenthSeconds = oneTenthSeconds % 100;
	            seconds = seconds % 60;
	            minutes = minutes % 60;
	            hours = hours % 24;
	            
	            // format the output
	            String output = "";
	            if (hours < 10) {
	            	output += "0"+String.valueOf(hours)+":";
	            }
	            else {
	            	output += String.valueOf(hours)+":";
	            }
	            if (minutes < 10) {
	            	output += "0"+String.valueOf(minutes)+":";
	            }
	            else {
	            	output += String.valueOf(minutes)+":";
	            }
	            if (seconds < 10) {
	            	output += "0"+String.valueOf(seconds)+".";
	            }
	            else {
	            	output += String.valueOf(seconds)+".";
	            }
	            if (oneTenthSeconds < 10) {
	            	output += "0"+String.valueOf(oneTenthSeconds);
	            }
	            else {
	            	output += String.valueOf(oneTenthSeconds);
	            }
	            
	            // send broadcast
	            Intent intent = new Intent();
	            intent.setAction(MainActivity.UPDATE_UI);
	            intent.putExtra("time", output);
	            broadcaster.sendBroadcast(intent);
			}
		}	

	}

	@Override
	protected void onHandleIntent(Intent intent) {
		if (intent != null && !intent.getAction().equals(lastRequest)) {
			lastRequest = intent.getAction();
			
			if (intent.getAction().equals(UPDATE_TIME)) {
				currentState = started;
			}
			else if(intent.getAction().equals(STOP_UPDATE_TIME)) {
				currentState = stopped;
			}
			
		}
	}
	
}

