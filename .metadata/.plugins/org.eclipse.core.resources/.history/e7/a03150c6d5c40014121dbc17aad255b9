package com.example.stopwatch.fragments;

import com.example.stopwatch.R;

import android.content.Context;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CompoundButton;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;
import android.widget.TextView;
import android.widget.ToggleButton;

public class SettingsFragment extends Fragment {
	
	private SharedPreferences settings;

	private ToggleButton do_not_notify;
	
	private int record_number_min;
	private int record_number_max;
	private SeekBar record_number_seekbar;
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		return inflater.inflate(R.layout.fragment_settings, container,false);
	}
	
	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		super.onActivityCreated(savedInstanceState);
		
		do_not_notify = (ToggleButton)getActivity().findViewById(R.id.do_not_notify);
		
		TextView record_min = (TextView)getActivity().findViewById(R.id.record_number_min);
		record_number_min = Integer.parseInt(record_min.getText().toString());
		
		TextView record_max = (TextView)getActivity().findViewById(R.id.record_number_max);
		record_number_max = Integer.parseInt(record_max.getText().toString());
		
		record_number_seekbar = (SeekBar)getActivity().findViewById(R.id.record_number_seekbar);
		
		// get preference
		settings = getActivity().getPreferences(Context.MODE_PRIVATE);
		
		// load data
		loadData();
		
		// set listener
		setListener();
	}
	
	private void loadData() {
		
		boolean do_not_notify = settings.getBoolean("do_not_notify", false);
		if (do_not_notify) {
			this.do_not_notify.setTextOn("");
		}
		else {
			this.do_not_notify.setTextOff("");
		}
		
		int record_number = settings.getInt("record_number", (record_number_max-record_number_min)/2);
		this.record_number_seekbar.setMax(record_number_max-record_number_min);
		this.record_number_seekbar.setProgress(record_number);
	}
	
	private void setListener() {
		this.do_not_notify.setOnCheckedChangeListener(new OnCheckedChangeListener() {

			@Override
			public void onCheckedChanged(CompoundButton button, boolean isChecked) {
				settings.edit().putBoolean("do_not_notify", isChecked);
			}
			
		});
		
		this.record_number_seekbar.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {
			int progressChanged = 0;
			
			@Override
			public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
				progressChanged = progress;				
			}

			@Override
			public void onStartTrackingTouch(SeekBar seekBar) {}

			@Override
			public void onStopTrackingTouch(SeekBar seekBar) {
				
				
			}
			
		});
	}
}
