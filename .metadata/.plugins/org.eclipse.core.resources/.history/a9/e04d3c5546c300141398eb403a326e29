package com.app.stopwatch;

import android.app.IntentService;
import android.content.Intent;
import android.os.Handler;
import android.support.v4.content.LocalBroadcastManager;

public class TimerIntentService extends IntentService {
	// actions IntentService can perform
	public static final String UPDATE_TIME = "com.app.stopwatch.action.UPDATE_TIME";
	public static final String STOP_UPDATE_TIME = "com.app.stopwatch.action.STOP_UPDATE_TIME";
	
	// broadcaster
	private LocalBroadcastManager broadcaster;
	
	// parameter for avoiding multiple requests
	private String lastRequest;
	
	// handler
	private Handler timerHandler;
	
	private Runnable timerRunnable;
	
	// internal parameters
	private long startTime;
	private long timeCount;

	public TimerIntentService() {
		super("TimerIntentService");
		broadcaster = LocalBroadcastManager.getInstance(this);
		lastRequest = "";
		
		timerHandler = new Handler();
		timerRunnable = new Runnable() {
			@Override
			public void run() {
				// calculate seconds, minutes
				long millis = System.currentTimeMillis() - startTime;
				int oneTenthSeconds = (int)(millis / 10);
	            int seconds = oneTenthSeconds / 100;
	            int minutes = seconds / 60;
	            int hours = minutes / 60;
	            oneTenthSeconds = oneTenthSeconds % 100;
	            seconds = seconds % 60;
	            minutes = minutes % 60;
	            hours = hours % 24;
	            

	            
	            // format the output
	            String output = "";
	            if (hours < 10) {
	            	output += "0"+String.valueOf(hours)+":";
	            }
	            else {
	            	output += String.valueOf(hours)+":";
	            }
	            if (minutes < 10) {
	            	output += "0"+String.valueOf(minutes)+":";
	            }
	            else {
	            	output += String.valueOf(minutes)+":";
	            }
	            if (seconds < 10) {
	            	output += "0"+String.valueOf(seconds)+".";
	            }
	            else {
	            	output += String.valueOf(seconds)+".";
	            }
	            if (oneTenthSeconds < 10) {
	            	output += "0"+String.valueOf(oneTenthSeconds);
	            }
	            else {
	            	output += String.valueOf(oneTenthSeconds);
	            }
	            
	            // send broadcast
	            Intent intent = new Intent();
	            intent.setAction(MainActivity.UPDATE_UI);
	            intent.putExtra("time", output);
	            broadcaster.sendBroadcast(intent);
	            
	            timerHandler.postDelayed(this, 10);
			}
		};
		startTime = -1;
		timeCount = 0;
	}
	
		@Override
	protected void onHandleIntent(Intent intent) {
		if (intent != null && !intent.getAction().equals(lastRequest)) {
			lastRequest = intent.getAction();
			
			if (intent.getAction().equals(UPDATE_TIME)) {
				
				timerHandler.postDelayed(timerRunnable, 0);
			}
			else if(intent.getAction().equals(STOP_UPDATE_TIME)) {
				timerHandler.removeCallbacks(timerRunnable);;
			}
			
		}
	}
}

